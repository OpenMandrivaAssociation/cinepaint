--- app/channels_dialog.c.str	2009-01-02 16:37:37.000000000 +0100
+++ app/channels_dialog.c	2009-01-02 16:37:52.000000000 +0100
@@ -326,7 +326,7 @@
 
   if(strstr(colour_sig,colour_sig_neu) == 0)
     {
-      sprintf(colour_sig, colour_sig_neu);
+      sprintf(colour_sig, "%s",colour_sig_neu);
       channelsD->gimage_id = -1;
       channels_dialog_update (gimage->ID);
     }
--- app/cms.c.str	2009-01-02 16:38:04.000000000 +0100
+++ app/cms.c	2009-01-02 16:38:15.000000000 +0100
@@ -1215,7 +1215,7 @@
 {   CMSProfile *return_value = 0;
     ProfileCacheEntry *cache_entry = 0;
     GString *hash_key = g_string_new(NULL); 
-    g_string_sprintf(hash_key, key_name);
+    g_string_sprintf(hash_key, "%s",key_name);
 
     /* generate new profile */
     return_value = g_new(CMSProfile, 1);
--- app/gdisplay.c.str	2009-01-02 16:38:50.000000000 +0100
+++ app/gdisplay.c	2009-01-02 16:39:08.000000000 +0100
@@ -318,7 +318,7 @@
       
       if(smr && (strstr(type,"MenuItem") || strstr(type,"GtkMenuItem")))
       {
-        snprintf( path, 64, fac_item->path );
+        snprintf( path, 64, "%s",fac_item->path );
         ptr = strchr( fac_item->path, '/' );
         if(ptr) *ptr=0;
 #     ifdef DEBUG
--- app/gimage.c.str	2009-01-02 16:39:26.000000000 +0100
+++ app/gimage.c	2009-01-02 16:39:47.000000000 +0100
@@ -2940,7 +2940,7 @@
 
   if (error)
     {
-      g_message (error);
+      g_message ("%s",error);
       return NULL;
     }
 
--- app/main.c.str	2009-01-02 16:40:32.000000000 +0100
+++ app/main.c	2009-01-02 16:41:23.000000000 +0100
@@ -590,7 +590,7 @@
       if(pos != 0)
       {
         /* 1 a. select an appropriate charset (needed for non UTF-8 fltk/gtk1)*/
-        sprintf (codeset, codeset_);
+        sprintf (codeset, "%s",codeset_);
  
           /* merge charset with locale string */
         if(set_locale)
@@ -619,7 +619,7 @@
 #else
           char *ptr = setlocale (LC_ALL, "");
 #endif
-          if(ptr) snprintf( locale, TEXTLEN, ptr);
+          if(ptr) snprintf( locale, TEXTLEN, "%s",ptr);
         }
       }
     }
@@ -713,7 +713,7 @@
 
     // .. or take locale info from environment
   if(getenv("LANG"))
-    snprintf(locale,TEXTLEN, getenv("LANG"));
+    snprintf(locale,TEXTLEN, "%s",getenv("LANG"));
 # endif
 
 
--- app/rc.c.str	2009-01-02 16:41:53.000000000 +0100
+++ app/rc.c	2009-01-02 16:42:09.000000000 +0100
@@ -534,7 +534,7 @@
   error_msg = open_backup_file (name, &fp_new, &fp_old);
   if (error_msg != NULL)
     {
-      g_message (error_msg);
+      g_message ("%s",error_msg);
       return;
     }
 
--- app/store_frame_manager.c.str	2009-01-02 16:42:35.000000000 +0100
+++ app/store_frame_manager.c	2009-01-02 16:42:45.000000000 +0100
@@ -2122,7 +2122,7 @@
           len = strlen( s->gimage->filename ) + 1;
           if(s->gimage->filename) free( s->gimage->filename );
           s->gimage->filename = malloc( len );
-          sprintf( s->gimage->filename, new_fn );
+          sprintf( s->gimage->filename, "%s",new_fn );
           sfm_flipbook_store_update( disp, row+i+1 );
 	}
       break;
--- lib/fl_i18n/fl_i18n.cxx.str	2009-01-02 16:00:36.000000000 +0100
+++ lib/fl_i18n/fl_i18n.cxx	2009-01-02 16:03:29.000000000 +0100
@@ -83,7 +83,7 @@
       if(pos != 0)
       {
         /* 1 a. select an appropriate charset (needed for non UTF-8 fltk/gtk1)*/
-        sprintf (codeset, codeset_); DBG_PROG_V( locale <<" "<< strrchr(locale,'.'))
+        sprintf (codeset, "%s", codeset_); DBG_PROG_V( locale <<" "<< strrchr(locale,'.'))
  
           /* merge charset with locale string */
         if(set_locale)
@@ -114,7 +114,7 @@
         if(set_locale)
         {
           char *ptr = setlocale (LC_MESSAGES, "");
-          if(ptr) snprintf( locale, TEXTLEN, ptr); DBG_PROG_V( locale )
+          if(ptr) snprintf( locale, TEXTLEN, "%s", ptr); DBG_PROG_V( locale )
         }
       }
     }
@@ -227,7 +227,7 @@
   temp = setlocale (LC_MESSAGES, "");
   char *tmp = temp ? strdup(temp) : NULL;
   if(tmp) {
-    snprintf(locale,TEXTLEN, tmp);
+    snprintf(locale,TEXTLEN, "%s", tmp);
     DBG_PROG_V( locale )
   }
   if(!set_locale)
@@ -237,7 +237,7 @@
 
     // .. or take locale info from environment
   if(!strlen(locale) && getenv("LANG"))
-    snprintf(locale,TEXTLEN, getenv("LANG"));
+    snprintf(locale,TEXTLEN, "%s", getenv("LANG"));
 # endif
 
 
--- lib/wire/datadir.c.str	2009-01-02 15:59:16.000000000 +0100
+++ lib/wire/datadir.c	2009-01-02 15:59:54.000000000 +0100
@@ -176,7 +176,7 @@
     char *text = (char*) calloc( sizeof(char), len );
     text[0] = 0;
     /* whats the path for the executeable ? */
-    snprintf (text, len-1, filename);
+    snprintf (text, len-1, "%s", filename);
 
     if(text[0] == '~')
     {
@@ -210,7 +210,7 @@
       {
         char* cn = (char*) calloc(2048, sizeof(char));
         sprintf (cn, "%s%s%s", getenv("PWD"), DIR_SEPARATOR, filename);
-        sprintf (text, cn);
+        sprintf (text, "%s", cn);
         if(cn) free(cn);
       }
     }
--- plug-ins/bracketing_to_hdr/bracketing_to_hdr.cpp.str	2009-01-02 16:10:05.000000000 +0100
+++ plug-ins/bracketing_to_hdr/bracketing_to_hdr.cpp	2009-01-02 16:10:36.000000000 +0100
@@ -190,7 +190,7 @@
   
   if (strcmp (name, PLUGIN_NAME) == 0)
     {
-      sprintf (vals.name, getenv("PWD"));     // default for `vals'
+      sprintf (vals.name, "%s", getenv("PWD"));     // default for `vals'
     
       gimp_get_data (PLUGIN_NAME, &vals);     // get data from last call
       //printf ("nach gimp_get_data(): vals = \"%s\"\n", vals.name);
@@ -412,7 +412,7 @@
             {
               snprintf (tmp, 256, "\"%s\":  %s\n\n%s",
                   fl_filename_name(fname), str_16bitdata, str_downsample);
-              int choice = fl_choice (tmp, _("Cancel"), _("Downsample"), _("No more warn"));
+              int choice = fl_choice (tmp, "%s", _("Cancel"), _("Downsample"), _("No more warn"));
               if (choice == 0)        // Cancel
                 {      
                   ok = false; 
--- plug-ins/bracketing_to_hdr/gui/gui_rest.cpp.str	2009-01-02 16:07:39.000000000 +0100
+++ plug-ins/bracketing_to_hdr/gui/gui_rest.cpp	2009-01-02 16:08:33.000000000 +0100
@@ -137,7 +137,7 @@
     {
       char txt[256];
       snprintf (txt, 256, _("A file \"%s\" already exists."), fl_filename_name(fname));
-      switch (fl_choice (txt, _("Cancel"), _("Overwrite"), _("Overwrite all")))
+      switch (fl_choice (txt, "%s", _("Cancel"), _("Overwrite"), _("Overwrite all")))
       {
         case 2:  overwrite_warning_ = false; break;
         case 1:  break;
--- plug-ins/bracketing_to_hdr/jhead/exif.c.str	2009-01-02 16:09:20.000000000 +0100
+++ plug-ins/bracketing_to_hdr/jhead/exif.c	2009-01-02 16:09:38.000000000 +0100
@@ -485,12 +485,12 @@
             // Show tag name
             for (a=0;;a++){
                 if (a >= TAG_TABLE_SIZE){
-                    printf(IndentString);
+                    printf("%s", IndentString);
                     printf("    Unknown Tag %04x Value = ", Tag);
                     break;
                 }
                 if (TagTable[a].Tag == Tag){
-                    printf(IndentString);
+                    printf("%s", IndentString);
                     printf("    %s = ",TagTable[a].Desc);
                     break;
                 }
--- plug-ins/collect/collect.cpp.str	2009-01-02 16:11:09.000000000 +0100
+++ plug-ins/collect/collect.cpp	2009-01-02 16:11:36.000000000 +0100
@@ -152,7 +152,7 @@
     INIT_I18N_UI();
     INIT_FLTK1_CODESET();
 
-    sprintf (vals.name, getenv("PWD"));
+    sprintf (vals.name, "%s", getenv("PWD"));
     gimp_get_data ("collect", &vals);
 
     switch (run_mode)
@@ -362,7 +362,7 @@
             gimp_image_resize (image_ID, max_w, max_h, 0,0); DBG
           }
 
-          sprintf (vals.name, fc->value(1));
+          sprintf (vals.name, "%s", fc->value(1));
           char* ptr = strrchr(vals.name, '/');
           *ptr = 0;
 
--- plug-ins/dicom/dicom.c.str	2009-01-02 16:12:06.000000000 +0100
+++ plug-ins/dicom/dicom.c	2009-01-02 16:12:41.000000000 +0100
@@ -347,7 +347,7 @@
   if (fd == -1)
     {
       temp = g_strdup_printf(_("Dicom: Can't open file %s."), filename);
-      g_message (temp);
+      g_message ("%s",temp);
       g_free(temp);
       return -1;
     }
@@ -362,7 +362,7 @@
   if (g_strncasecmp(buf, "PAPYRUS", 7) == 0)
     {
       temp = g_strdup_printf(_("Dicom: %s is a PAPYRUS DICOM file which this plug-in does not support yet."), filename);
-      g_message (temp);
+      g_message ("%s",temp);
       g_free(temp);
       return -1;
     }
@@ -371,7 +371,7 @@
   if (g_strncasecmp(buf,"DICM",4) != 0)
     {
       temp = g_strdup_printf(_("Dicom: %s is not a DICOM file."), filename);
-      g_message (temp);
+      g_message ("%s",temp);
       g_free(temp);
       return -1;
     }
--- plug-ins/icc_examin/icc_examin/icc_betrachter.cxx.str	2009-01-02 16:20:52.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/icc_betrachter.cxx	2009-01-02 16:21:07.000000000 +0100
@@ -83,7 +83,7 @@
   icc_examin->icc_betrachter->tag_nummer = _tag;
 
 // = profile.profil()->printTagInfo(icc_examin->icc_betrachter->tag_nummer);
-    sprintf (&typ[0], profile.profil()->printTagInfo(icc_examin->icc_betrachter->tag_nummer)[1].c_str());
+    sprintf (&typ[0], "%s", profile.profil()->printTagInfo(icc_examin->icc_betrachter->tag_nummer)[1].c_str());
 
     DBG_PROG_V( profile.profil()->printTagInfo(icc_examin->icc_betrachter->tag_nummer)[1].c_str() )
 
--- plug-ins/icc_examin/icc_examin/icc_cinepaint_intern.cpp.str	2009-01-02 16:25:14.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/icc_cinepaint_intern.cpp	2009-01-02 16:25:37.000000000 +0100
@@ -476,9 +476,9 @@
   ncl2->anzahl = icValue((icUInt32Number)farben_n);
   ncl2->koord  = icValue((icUInt32Number)farb_kanaele);
   if(vorname && strlen(vorname) < 32)
-    sprintf(ncl2->vorname, vorname);
+    sprintf(ncl2->vorname, "%s",vorname);
   if(nachname && strlen(nachname) < 32)
-    sprintf(ncl2->nachname, nachname);
+    sprintf(ncl2->nachname, "%s",nachname);
 
   DBG_PROG_S( farben_n <<" "<< pcsfarbe.size() )
 
@@ -496,7 +496,7 @@
                                    (geraetefarbe[farb_kanaele*i+j]*65535.0));
     // TODO mark pointer here
     if (name.size() && name[i].size() < 32)
-      sprintf(f->name, name[i].c_str());
+      sprintf(f->name, "%s", name[i].c_str());
 
     #ifdef DEBUG_
     if( 10 < i && i < 20 )
--- plug-ins/icc_examin/icc_examin/icc_gl.cpp.str	2009-01-02 16:14:57.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/icc_gl.cpp	2009-01-02 16:15:34.000000000 +0100
@@ -821,7 +821,7 @@
     glRotatef (90,0.0,0,1.0);
       glMatrixMode(GL_MODELVIEW);
       glTranslatef((0.0-0.3),(0.0-0.1),(0.0-0.05));
-        sprintf (&text[0],_("0,0,0"));
+        sprintf (&text[0],"5s",_("0,0,0"));
         ZeichneText(font, text)
       glTranslatef(0.3,0.1,0.05);
     glRotatef (-90,0.0,0,1.0);
@@ -933,7 +933,7 @@
       if (von_farb_namen_.size())
       {
         ptr = (char*) von_farb_namen_[0].c_str();
-        sprintf (&text[0], ptr);
+        sprintf (&text[0], "%s", ptr);
         glRasterPos3f (0, .5+ueber, 0);
         ZeichneOText(ortho_font, 1, text)
       }
@@ -942,7 +942,7 @@
       if (von_farb_namen_.size())
       {
         ptr = (char*) von_farb_namen_[1].c_str();
-        sprintf (&text[0], ptr);
+        sprintf (&text[0], "%s", ptr);
         if (von_farb_namen_.size() &&
             von_farb_namen_[1] == _("CIE *a"))
           glRasterPos3f (.0, -.5, a_darstellungs_breite/2.+ueber);
@@ -955,7 +955,7 @@
       if (von_farb_namen_.size())
       {
         ptr = (char*) von_farb_namen_[2].c_str();
-        sprintf (&text[0], ptr);
+        sprintf (&text[0], "%s", ptr);
         if (von_farb_namen_.size() &&
             von_farb_namen_[2] == _("CIE *b"))
           glRasterPos3f (b_darstellungs_breite/2.+ueber, -.5, .0);
--- plug-ins/icc_examin/icc_examin/icc_helfer.cpp.str	2009-01-02 16:16:13.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/icc_helfer.cpp	2009-01-02 16:17:11.000000000 +0100
@@ -1178,7 +1178,7 @@
     char *text = (char*) calloc( sizeof(char), len );
     text[0] = 0;
     /* whats the path for the executeable ? */
-    snprintf (text, len-1, filename);
+    snprintf (text, len-1, "%s", filename);
 
     if(text[0] == '~')
     {
@@ -1213,7 +1213,7 @@
       {
         char* cn = (char*) calloc(2048, sizeof(char));
         sprintf (cn, "%s%s%s", getenv("PWD"), DIR_SEPARATOR, filename);
-        sprintf (text, cn);
+        sprintf (text, "%s", cn);
         if(cn) free(cn); 
       }
     }
@@ -1452,9 +1452,9 @@
   char trenner [16];
 
   if( trennzeichen ) { DBG_PARSER
-    sprintf (trenner, trennzeichen );
+    sprintf (trenner, "%s", trennzeichen );
   } else {
-    sprintf (trenner, leer_zeichen );
+    sprintf (trenner, "%s", leer_zeichen );
     suchenErsetzen( zeile, ",", ".", 0 );
   }
 
--- plug-ins/icc_examin/icc_examin/icc_profile.cpp.str	2009-01-02 16:17:54.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/icc_profile.cpp	2009-01-02 16:18:26.000000000 +0100
@@ -694,7 +694,7 @@
     if(texte.size())
     {
       text = (char*) calloc( sizeof(char), strlen(texte[0].c_str()) * 4 );
-      sprintf( text, texte[0].c_str() );
+      sprintf( text, "%s", texte[0].c_str() );
     }
   }
 
@@ -1026,7 +1026,7 @@
 #   if 0
     memcpy (string, text, n);
 #   else
-    snprintf(&string[0], n, text);
+    snprintf(&string[0], n, "%s", text);
 #   endif
   string[1023] = '\000';
 
--- plug-ins/icc_examin/icc_examin/icc_vrml_parser.cpp.str	2009-01-02 16:19:03.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/icc_vrml_parser.cpp	2009-01-02 16:19:14.000000000 +0100
@@ -91,7 +91,7 @@
   std::vector<ZifferWort> werte;        // intermediate return value
   char trennzeichen[12];                // to be used separating signs
   trennzeichen[0] = ',';
-  sprintf(&trennzeichen[1], leer_zeichen);
+  sprintf(&trennzeichen[1], "%s", leer_zeichen);
   const bool anfuehrungstriche = false; // set no quotation marks
   unsigned int dimensionen;             // number of belonging values
   int achse;                            // selected value from dimensionen
--- plug-ins/icc_examin/icc_examin/my_file_chooser2.cxx.str	2009-01-02 16:21:24.000000000 +0100
+++ plug-ins/icc_examin/icc_examin/my_file_chooser2.cxx	2009-01-02 16:22:11.000000000 +0100
@@ -564,7 +564,7 @@
       }
     } else {
       // File doesn't exist, so beep at and alert the user...
-      fl_alert(existing_file_label);
+      fl_alert("%s",existing_file_label);
     }
   }
   else if (Fl::event_key() != FL_Delete &&
@@ -752,7 +752,7 @@
 
 
   // Get a directory name from the user
-  if ((dir = fl_input(new_directory_label, NULL)) == NULL)
+  if ((dir = fl_input("%s",new_directory_label, NULL)) == NULL)
     return;
 
   // Make it relative to the current directory as needed...
@@ -871,7 +871,7 @@
   item = showChoice->text(showChoice->value());
 
   if (strcmp(item, custom_filter_label) == 0) {
-    if ((item = fl_input(custom_filter_label, pattern_)) != NULL) {
+    if ((item = fl_input("%s",custom_filter_label, pattern_)) != NULL) {
       strlcpy(pattern_, item, sizeof(pattern_));
 
       quote_pathname(temp, item, sizeof(temp));
--- plug-ins/openexr/openexr.cxx.str	2009-01-02 16:26:49.000000000 +0100
+++ plug-ins/openexr/openexr.cxx	2009-01-02 16:27:02.000000000 +0100
@@ -563,7 +563,7 @@
 	if (pixels)
 	    g_free (pixels);
 
-	g_print (e.what ());
+	g_print ("%s",e.what ());
 	gimp_quit ();
     }
 }
--- plug-ins/pdf/pdf.cpp.str	2009-01-02 16:27:39.000000000 +0100
+++ plug-ins/pdf/pdf.cpp	2009-01-02 16:28:53.000000000 +0100
@@ -208,9 +208,9 @@
     INIT_I18N_UI();
     INIT_FLTK1_CODESET();
 
-    sprintf (vals.name, getenv("PWD"));
+    sprintf (vals.name, "%s",getenv("PWD"));
 
-    snprintf(vals.filename, 1024, param[1].data.d_string);
+    snprintf(vals.filename, 1024, "%s",param[1].data.d_string);
 
     switch (run_mode)
     {
@@ -363,7 +363,7 @@
           case GS_PNG48: ptn.append(".png"); break;
     }
 
-    snprintf( vals.name , 1024, ptn.c_str());
+    snprintf( vals.name , 1024, "%s",ptn.c_str());
 
     DBG;
 
@@ -510,12 +510,12 @@
 {
   std::stringstream ss;
   char tmp[1024], file[1024], dir[1024];
-  snprintf(tmp, 1023, vals.filename);
-  snprintf(file, 1023, strrchr(tmp, '/'));
+  snprintf(tmp, 1023, "%s",vals.filename);
+  snprintf(file, 1023, "%s",strrchr(tmp, '/'));
   char *ptr = strrchr(tmp, '/');
   char* viewer = NULL;
   *ptr = 0;
-  snprintf(dir, 1023, tmp);
+  snprintf(dir, 1023, "%s",tmp);
   printf("%s:%d %s()\n",__FILE__,__LINE__,__func__);
   cout << dir << file << tmp << endl;
 
@@ -544,7 +544,7 @@
 
     vals.ok = 0;
     if(!strlen(vals.command)) {
-      sprintf(vals.command, GS_COMMAND_BASE);
+      sprintf(vals.command, "%s",GS_COMMAND_BASE);
       vals.interpreter = 0;
     }
 
--- plug-ins/pdf/pdf_dialog.cxx.str	2009-01-02 16:29:10.000000000 +0100
+++ plug-ins/pdf/pdf_dialog.cxx	2009-01-02 16:29:25.000000000 +0100
@@ -258,7 +258,7 @@
 
 void take_opts() {
   const char* text = interpreter_text->value();
-  snprintf( vals.command, 1024, text );
+  snprintf( vals.command, 1024, "%s",text );
 
   vals.resolution = (int) slider_resolution->value();
   vals.ok = 1;
--- plug-ins/rawphoto/rawphoto.c.str	2009-01-02 16:30:58.000000000 +0100
+++ plug-ins/rawphoto/rawphoto.c	2009-01-02 16:31:12.000000000 +0100
@@ -147,7 +147,7 @@
     ptr = strchr( tmpname, '.' );
     if(ptr)
       ptr[1] = 0;
-    sprintf( &tmpname[strlen(tmpname)], extension );
+    sprintf( &tmpname[strlen(tmpname)], "%s",extension );
     return tmpname;
 }
 
--- plug-ins/tiff/gui.c.str	2009-01-02 16:32:14.000000000 +0100
+++ plug-ins/tiff/gui.c	2009-01-02 16:32:28.000000000 +0100
@@ -530,7 +530,7 @@
       g_message (_("Your string is too long.\n"));
       return;
     } else {
-      sprintf ( string_ptr, text);
+      sprintf ( string_ptr, "%s",text);
     }
   } else {
     string_ptr[0] = '\000';
--- plug-ins/tiff/info.c.str	2009-01-02 16:32:38.000000000 +0100
+++ plug-ins/tiff/info.c	2009-01-02 16:33:04.000000000 +0100
@@ -1184,7 +1184,7 @@
     mem_profile = gimp_image_get_icc_profile_by_mem(image_ID, &size, ICC_IMAGE_PROFILE);
     if (mem_profile && size) {
       profile = cmsOpenProfileFromMem (mem_profile, size);
-      sprintf (color_space_name_,
+      sprintf (color_space_name_,"%s",
                gimp_image_get_icc_profile_color_space_name (image_ID, ICC_IMAGE_PROFILE));
       DBG (color_space_name_)
     
@@ -1195,7 +1195,7 @@
       info->icc_profile_info = calloc (sizeof (char),
           strlen( gimp_image_get_icc_profile_info(image_ID, ICC_IMAGE_PROFILE) )
           + 1);
-      sprintf (info->icc_profile_info,
+      sprintf (info->icc_profile_info,"%s",
                   gimp_image_get_icc_profile_info(image_ID, ICC_IMAGE_PROFILE));
       memcpy (&info->colorspace[0], color_space_name_, 4);
       info->colorspace[4] = '\000';
--- plug-ins/xwd/xwd.c.str	2009-01-02 16:33:43.000000000 +0100
+++ plug-ins/xwd/xwd.c	2009-01-02 16:33:55.000000000 +0100
@@ -490,7 +490,7 @@
     temp = g_strdup_printf (_("load_image (xwd): XWD-file %s has format %d, depth %d\n\
 and bits per pixel %d.\nCurrently this is not supported.\n"),
 			    filename, (int)xwdhdr.l_pixmap_format, depth, bpp);
-    g_message (temp);
+    g_message ("%s",temp);
     g_free (temp);
     return (-1);
   }
